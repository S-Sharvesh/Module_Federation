name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install dependencies
        run: npm run install:all

      - name: Run linting
        run: npm run lint

      - name: Run tests
        run: npm test

      - name: Build applications
        run: npm run build:prod

  security:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run security audit
        run: |
          cd shell-app && npm audit --audit-level high
          cd ../feature1-app && npm audit --audit-level high

  deploy-preview:
    runs-on: ubuntu-latest
    needs: [test, security]
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18.x"
          cache: "npm"

      - name: Install dependencies
        run: npm run install:all

      - name: Build for preview
        run: npm run build:prod

      - name: Deploy to preview environment
        run: echo "Deploy to preview environment here"
        # Add your preview deployment logic here

  deploy-production:
    runs-on: ubuntu-latest
    needs: [test, security]
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18.x"
          cache: "npm"

      - name: Install dependencies
        run: npm run install:all

      - name: Build for production
        run: npm run build:prod

      - name: Deploy to production
        run: echo "Deploy to production here"
        # Add your production deployment logic here
        # Example for different platforms:
        # - name: Deploy to Netlify
        #   uses: netlify/actions/cli@master
        #   with:
        #     args: deploy --prod --dir=shell-app/dist
        #   env:
        #     NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        #     NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
